let port;
let reader;

document.getElementById("connectButton").addEventListener("click", async () => {
    try {
        // ‡∏Ç‡∏≠‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÉ‡∏ä‡πâ Serial Port
        port = await navigator.serial.requestPort();
        await port.open({ baudRate: 9600 });

        document.getElementById("statusText").innerText = "‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!";
        document.getElementById("statusText").style.color = "green";
        document.getElementById("statusEimoji").innerText = "‚ù§Ô∏è‚Äçüî•";

        // ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏≠‡πà‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
        const readableStream = port.readable;
        reader = readableStream.getReader();
        
        // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏≠‡πà‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
        readLoop();
    } catch (err) {
        console.error("Serial Connection Error: ", err);
        alert("‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! ‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á");
        document.getElementById("statusText").innerText = "‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠";
        document.getElementById("statusText").style.color = "red";
        document.getElementById("statusEimoji").innerText = "üíî";
    }
});

async function readLoop() {
    try {
        let dataBuffer = '';
        while (true) {
            const { value, done } = await reader.read();
            if (done) {
                console.log("‡∏Å‡∏≤‡∏£‡∏≠‡πà‡∏≤‡∏ô‡∏™‡∏ï‡∏£‡∏µ‡∏°‡∏õ‡∏¥‡∏î");
                break;
            }
            
            if (value) {
                // ‡πÅ‡∏õ‡∏•‡∏á ArrayBuffer ‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏ï‡∏£‡∏¥‡∏á
                const chunk = new TextDecoder().decode(value);
                dataBuffer += chunk;

                // ‡πÅ‡∏¢‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏≠‡∏Å‡πÄ‡∏õ‡πá‡∏ô‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î
                const lines = dataBuffer.split('\n');
                
                // ‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏ó‡∏∏‡∏Å‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡∏ó‡∏µ‡πà‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå
                while (lines.length > 1) {
                    const line = lines.shift().trim();
                    updateRGB(line);
                }

                // ‡πÄ‡∏Å‡πá‡∏ö‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå‡πÑ‡∏ß‡πâ
                dataBuffer = lines[0] || '';
            }
        }
    } catch (err) {
        console.error("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏Ç‡∏ì‡∏∞‡∏≠‡πà‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Serial:", err);
    } finally {
        if (reader) {
            reader.releaseLock();
        }
    }
}

function updateRGB(data) {
    try {
        // Regex ‡∏à‡∏±‡∏ö‡∏Ñ‡∏π‡πà‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• RGB
        const rgbMatch = data.match(/R:(\d+),G:(\d+),B:(\d+)/);
        const nameMatch = data.match(/Name:([^,]+)/);
        const addressMatch = data.match(/Address:(.+)/);

        if (rgbMatch && nameMatch && addressMatch) {
            const r = parseInt(rgbMatch[1]);
            const g = parseInt(rgbMatch[2]);
            const b = parseInt(rgbMatch[3]);
            const name = nameMatch[1].trim();
            const address = addressMatch[1].trim();

            // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ñ‡πà‡∏≤ RGB
            document.getElementById("rValue").innerText = `R: ${r}`;
            document.getElementById("gValue").innerText = `G: ${g}`;
            document.getElementById("bValue").innerText = `B: ${b}`;

            // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ä‡∏∑‡πà‡∏≠‡πÅ‡∏•‡∏∞‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏™‡∏µ
            document.getElementById("nameText").innerHTML = `Name: <span style="color: rgb(${r},${g},${b})">${name}</span>`;
            document.getElementById("addressText").innerHTML = `Address: <span style="color: rgb(${r},${g},${b})">${address}</span>`;

            // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏µ‡∏Å‡∏•‡πà‡∏≠‡∏á
            let rgbColor = `rgb(${r},${g},${b})`;
            document.getElementById("colorBox").style.backgroundColor = rgbColor;

            // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÄ‡∏≠‡∏ü‡πÄ‡∏ü‡∏Å‡∏ï‡πå‡∏†‡∏≤‡∏û
            let hue = Math.atan2(g - b, r - g) * (180 / Math.PI);
            let brightness = (r + g + b) / 765 * 1.5;
            let sepia = 1;

            let shadowColor = `rgba(${r},${g},${b}, 0.8)`;
            document.getElementById("statusEimoji").style.filter = 
                `sepia(${sepia}) ` +
                `hue-rotate(${hue}deg) ` +
                `brightness(${brightness}) ` +
                `drop-shadow(0px 0px 20px ${shadowColor})`;

            console.log("‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ñ‡πà‡∏≤‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:", { r, g, b, name, address });
        } else {
            console.log("‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ô:", data);
        }
    } catch (err) {
        console.error("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô updateRGB:", err);
    }
}

// ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Serial
if ('serial' in navigator) {
    navigator.serial.addEventListener('disconnect', (event) => {
        console.log('‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ñ‡∏π‡∏Å‡∏ï‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠');
        document.getElementById("statusText").innerText = "‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠";
        document.getElementById("statusText").style.color = "red";
        document.getElementById("statusEimoji").innerText = "üíî";
    });
} else {
    alert('Web Serial API ‡πÑ‡∏°‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡πÉ‡∏ô‡πÄ‡∏ö‡∏£‡∏≤‡∏ß‡πå‡πÄ‡∏ã‡∏≠‡∏£‡πå‡∏ô‡∏µ‡πâ');
}